<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfUI.UI.Main"
        xmlns:c="clr-namespace:WpfUI.Class"
        x:Class="WpfUI.UI.Main.UIMain"
        mc:Ignorable="d"
        Title="UIMain" Height="590.778" Width="1181.411" Closing="Window_Closing" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <c:TreeListViewLineConverter x:Key="LineConverter"/>
        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <!-- Rectangle 9x9 pixels -->
                            <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <!-- Vertical line inside rectangle -->
                            <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <!-- Horizontal line inside rectangle -->
                            <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeViewItem -->
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                            <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding Converter={StaticResource LineConverter}, RelativeSource={RelativeSource Self}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Green"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="25"/>
            <RowDefinition/>
            <RowDefinition MinHeight="150" Height="200" MaxHeight="600"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="150" Width="250" MaxWidth="400"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Menu x:Name="menu" Grid.ColumnSpan="2">
            <MenuItem x:Name="MenuCloud" Header="Cloud" SubmenuOpened="MenuCloud_SubmenuOpened">
                <MenuItem x:Name="Cloud_add" Header="Add" ItemsSource="{Binding}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Text}"/>
                            <Setter Property="Icon" Value="{Binding Img}"/>
                            <EventSetter Event="MenuItem.Click" Handler="Cloud_add_click"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem x:Name="Cloud_remove" Header="Remove" ItemsSource="{Binding}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Text}"/>
                            <Setter Property="Icon" Value="{Binding Img}"/>
                            <EventSetter Event="MenuItem.Click" Handler="Cloud_remove_click"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="MenuSetting" Header="Settings" SubmenuOpened="MenuSetting_SubmenuOpened">
                <MenuItem Header="Settings..."/>
                <MenuItem x:Name="MenuChangeUI" Header="Change UI">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Text}"/>
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                            <EventSetter Event="MenuItem.Click" Handler="ChangeUI_click"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <MenuItem x:Name="MenuChangeLang" Header="Change Language">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Text}"/>
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                            <EventSetter Event="MenuItem.Click" Handler="ChangeLang_click"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </MenuItem>
        </Menu>
        <TreeView x:Name="treeView" Grid.Row="2" Margin="2,2,3,2" ItemsSource="{Binding TreeObservableCollection}" ContextMenuOpening="treeView_ContextMenuOpening" 
                  BorderThickness="0">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Childrens}">
                    <StackPanel Orientation="Horizontal" Height="20" Margin="0" Width="auto" MouseLeftButtonUp="StackPanel_MouseLeftButtonUp" MouseRightButtonDown="StackPanel_MouseRightButtonDown">
                        <Image Source="{Binding DisplayData.ImgSource}" Height="16" Width="16" Margin="0"/>
                        <TextBlock Text="{Binding DisplayData.Name}" Height="20" Margin="0,3,0,0" Padding="0" FontSize="12"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <ControlTemplate x:Key="MenuSeparatorTemplate">
                            <Separator  IsEnabled="False"/>
                        </ControlTemplate>
                    </ContextMenu.Resources>
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Text}" />
                            <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                            <EventSetter Event="MenuItem.Click" Handler="TV_MenuItem_Click"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ''}" Value="{x:Null}">
                                    <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
        <GridSplitter x:Name="gridSplitter" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="2" Width="3" Background="DarkGray"/>
        <GridSplitter x:Name="gridSplitter2" HorizontalAlignment="Stretch" Height="3" Grid.Row="3" VerticalAlignment="Top" Grid.ColumnSpan="2" Background="DarkGray"/>
        <TabControl x:Name="tabControl" Grid.Column="1" Margin="3,0,0,0" Grid.Row="2">
            <TabControl.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="ContextMenu_newtab" Header="Newtab" Click="ContextMenu_newtab_Click"/>
                    <MenuItem x:Name="ContextMenu_closetab" Header="Close this tab" Click="ContextMenu_closetab_Click" IsEnabled="False"/>
                </ContextMenu>
            </TabControl.ContextMenu>
        </TabControl>
        
        <Grid x:Name="menu1" Grid.Column="0" Margin="0,0,0,0" Grid.Row="1" Grid.RowSpan="1" Grid.ColumnSpan="2">
            <Image x:Name="image_back" HorizontalAlignment="Left" Width="32" Margin="3,0,0,0" MouseUp="image_back_MouseUp"/>
            <Image x:Name="image_next" Margin="40,0,0,0" HorizontalAlignment="Left" Width="30" MouseUp="image_next_MouseUp"/>
            <Image x:Name="image_search" Margin ="70,0,0,0" HorizontalAlignment="Left" Width="26" MouseUp="image_search_MouseUp"/>
        </Grid>
        <local:UC_LV Grid.Row="3" Grid.ColumnSpan="2" x:Name="LV_UD"/>
    </Grid>
</Window>
